#!/usr/bin/bash

wallpaper=$1

if [[ $wallpaper = "" ]]; then
  echo "Wallpaper not supplied"
  exit 1
fi

cacheDir=~/dotfiles

mkdir $cacheDir/colors > /dev/null 2>&1
mkdir ~/.cache/colors > /dev/null 2>&1

wallpaperNameGet(){
  echo $(echo $wallpaper | cut -d "/" -f 6-)
}

getHex() {
  hex=$(echo $1 | cut -d " " -f$2)
  hex=${hex:1}
  echo $hex
}

wallpaperName=$(wallpaperNameGet)

if [[ -f $cacheDir/colors/colors-$wallpaperName.txt ]]; then
  if [[ $2 != "skip" ]]; then
      read -p "Colors for image $wallpaper already generated. Do you want to continue? (y/N): " resp
      if [ -z "$resp" ] || [ "$resp" = "n" ] || [ "$resp" = "N" ]; then
        echo "Using old colors"
      else
        colorz -n 8 --no-preview "$wallpaper" > $cacheDir/colors/colors-$wallpaperName.txt
        colorz -n 1 --no-preview --maxv 50 "$wallpaper" >> $cacheDir/colors/colors-$wallpaperName.txt
      fi
  fi
else
  touch $cacheDir/colors/colors-$wallpaperName.txt
  colorz -n 8 --no-preview "$wallpaper" > $cacheDir/colors/colors-$wallpaperName.txt
  colorz -n 1 --no-preview --maxv 50 "$wallpaper" >> $cacheDir/colors/colors-$wallpaperName.txt
fi


colors=""

while read -r line; do
  colors="$colors $line"
done <$cacheDir/colors/colors-$wallpaperName.txt

# GTK CSS
touch ~/.cache/colors/gtk-colors.css
echo -e "/* Colors generated by colorz and CSS File generated by script written by Talin Sharma */\n" > ~/.cache/colors/gtk-colors.css
for i in $(seq 1 18);
do
  echo "@define-color color$i #$(getHex "$colors" $i);" >> ~/.cache/colors/gtk-colors.css
done

# Hyprland
touch ~/.cache/colors/hyprland-colors.conf
echo -e "# Colors generated by colorz and conf file generated by script written by Talin Sharma\n" > ~/.cache/colors/hyprland-colors.conf
for i in $(seq 1 18);
do
  echo "\$color$i = rgb($(getHex "$colors" $i))" >> ~/.cache/colors/hyprland-colors.conf
done
