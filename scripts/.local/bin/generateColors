wallpaper=$1

if [[ $wallpaper = "" ]]; then
  echo "Wallpaper not supplied"
  exit 1
fi

cacheDir=~/.cache/colors
tmpDir=$cacheDir/tmp

mkdir $cacheDir > /dev/null 2>&1
mkdir $cacheDir/colors > /dev/null 2>&1
wallpaperNameGet(){
  echo $(echo $wallpaper | cut -d "/" -f 6-)
}
wallpaperName=$(wallpaperNameGet)

if [[ -f $cacheDir/colors/colors-$wallpaperName.txt ]]; then
  if [[ $2 != "skip" ]]; then
      read -p "Colors for image $wallpaper already generated. Do you want to continue? (y/N): " resp
      if [ -z "$resp" ] || [ "$resp" = "n" ] || [ "$resp" = "N" ]; then
        exit 0
      else
        colorz -n 10 --no-preview "$wallpaper" > $cacheDir/colors/colors-$wallpaperName.txt
      fi
  fi
else
  touch $cacheDir/colors/colors-$wallpaperName.txt
  colorz -n 10 --no-preview "$wallpaper" > $cacheDir/colors/colors-$wallpaperName.txt
fi


colors=""

while read -r line; do
  colors="$colors $line"
done <$cacheDir/colors/colors-$wallpaperName.txt

echo -e "/* Colors generated by colorz and CSS File generated by script written by Talin Sharma */\n" > $cacheDir/gtk-colors.css
for i in $(seq 1 20);
do
  echo "@define-color color$i $(echo $colors | cut -d " " -f$((i)));" >> $cacheDir/gtk-colors.css
done
